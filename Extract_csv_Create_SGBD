// Gerar o CSV a partir das tabelas ja criadas no modelo relacional

COPY (SELECT * FROM COMPANY) TO '/COMPANY.csv' WITH CSV header;

COPY (SELECT * FROM OFFER) TO '/OFFER.csv' WITH CSV header;

COPY (SELECT * FROM SKILL)  TO '/SKILL.csv' WITH CSV header;

COPY (SELECT * FROM PERSON) TO '/PERSON.csv' WITH CSV header;

COPY (SELECT * FROM DEMANDS) TO '/DEMANDS.csv' WITH CSV header;

COPY (SELECT * FROM PERSON_SKILL) TO '/PERSON_SKILL.csv' WITH CSV header;

COPY (SELECT * FROM TABLE_RECOMENDS) TO '/TABLE_RECOMENDS.csv' WITH CSV header;

// Gerar o BD de Grafos a partir dos arquivos CSV


// Create COMPANY

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:COMPANY.csv" AS row
CREATE (c:COMPANY {Id: row.Id, CName: row.CName, Website: row.Website, Sector: row.Sector,
 Industry: row.Industry, NumberOfRatings: row.NumberOfRatings, Logo: row.Logo, 
OverallRating: row.OverallRating, CultureAndValues: row.CultureAndValues, 
SeniorLeadership: row.SeniorLeadership, CompensationAndBenefits: row.CompensationAndBenefits, 
CareerOpportunities: row.CareerOpportunities, WorkLifeBalance: row.WorkLifeBalance, 
RecomendToFriend: row.RecomendToFriend, CEOAproval: row.CEOAproval})

CREATE CONSTRAINT ON (c:COMPANY) ASSERT c.Id IS UNIQUE


// Create PERSON

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:PERSON.csv" AS row
CREATE (p:PERSON {Id: row.Id, Name: row.Name, Born_Date: row.Born_Date, Email: row.Email})

CREATE CONSTRAINT ON (p:PERSON) ASSERRT p.Id IS UNIQUE


// Create SKILL

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:SKILL.csv" AS row
CREATE (s:SKILL {SName: row.SName, Description: row.Description})

CREATE CONSTRAINT ON (s:SKILL) ASSERRT s.SName IS UNIQUE


// Create OFFER
USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:OFFER.csv" AS row
CREATE (o:OFFER {Id: row.Id, CompanyId: row.CompanyId, Title: row.Title, Description: row.Description, 
Location: row.Location, Url: row.Url, PubDate: row.PubDate, Updated: row.Updates})

CREATE CONSTRAINT ON (o:OFFER) ASSERRT o.Id IS UNIQUE


// Create OFFER AND COMPANY Relationship

MATCH (o:OFFER)
MATCH (c:COMPANY {Id: o.CompanyId})
CREATE (o)-[:PostedBy]->(c)


// Create DEMANDS Relationship

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:DEMANDS.csv" AS row
MATCH (o:OFFER {Id: row.Offer_id})
MATCH (s:SKILL {SName: row.Skill_name})
CREATE (o)<-[:Demands]->(s)


// Create PERSON_SKILL Relationship

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:PERSON_SKILL.csv" AS row
MATCH (p:PERSON {Id: row.Person_id})
MATCH (s:SKILL {SName: row.Skill_name})
CREATE (p)<-[:Person_Skill]->(s)


// Create RECOMENDS Relationship

USING PERIODIC COMMIT
LOAD CSV WITH HEADERS FROM "file:TABLE_RECOMENDS.csv" AS row
MATCH (o:OFFER {Id: row.Offer_id})
MATCH (s:SKILL {SName: row.Skill_name})
CREATE (o)<-[:Recomends {Recomendation_date: row.Recomendation_date, Relevance: row.Relevance}]->(s)
